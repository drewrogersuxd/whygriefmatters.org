---
import type { InternetResourceType } from "@model/common";
import { startCase } from "lodash";
import pluralize from "pluralize";
import { resourceTypeTextColorMap } from "@common/color-maps";
import type { Category } from "@model/category";
import type { Population } from "@model/population";

interface Props {
  resourceType?: InternetResourceType;
  category?: Category;
  population?: Population;
}

const { resourceType, category, population } = Astro.props;

const categoryTextPrefixMap: Record<string, string> = {
  "loss-of-a": "Loss of A ",
  "supporting-those-who-have-lost": "Supporting Those Who Have Lost A ",
};

const typeText = resourceType
  ? startCase(pluralize(resourceType))
  : "Resources";

const prefix =
  typeof category?.parent?.slug !== "undefined"
    ? `${categoryTextPrefixMap?.[category?.parent?.slug] ?? ""}`
    : "";

const categoryText = `${prefix}${category?.title ?? "Grief"}`;

const populationText = population ? `${population.name}` : null;

const resourceTypeTextColor = resourceType
  ? resourceTypeTextColorMap[resourceType]
  : "text-slate-500";
---

<h1 class="ml-12 mt-6 font-serif">
  <div class="text-xl">
    <span class:list={[resourceTypeTextColor, "font-bold", "lowercase"]}
      >{typeText}</span
    >
    <span class="italic text-slate-500 after:content-['...']">{` about`}</span>
  </div>
  <div class="ml-4">
    <span class="text-sky-800 text-4xl">{categoryText}</span>
  </div>
  {
    populationText && (
      <div class="ml-8">
        <span class="italic text-slate-500 text-xl before:content-['...']">{`for ${populationText}`}</span>
      </div>
    )
  }
</h1>
<div>
  <slot />
</div>
