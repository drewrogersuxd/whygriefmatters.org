---
import uniqBy from "lodash/uniqBy";

import type {
  InternetResourcePageListing,
  InternetResourceType,
} from "@model/internetResource";
import type { Category } from "@model/category";

import { getPopulationPagesData } from "@common/client";

import MainLayout from "@layouts/MainLayout.astro";

interface Props {
  populationName: string;
  resources: Array<InternetResourcePageListing>;
  applicableTypes: Array<InternetResourceType>;
  applicableCategories: Array<Category>;
}

export async function getStaticPaths() {
  const populationPagesData = await getPopulationPagesData();

  return populationPagesData.flatMap((pageData) => {
    const applicableCategories =
      uniqBy(
        pageData.resources?.flatMap((r) => r.categories),
        "slug",
      ).filter((x) => x !== null) ?? [];

    return {
      params: { population: pageData.slug },
      props: {
        populationName: pageData.name,
        resources: pageData.resources ?? [],
        applicableCategories,
      },
    };
  });
}

const params = Astro.params;
const props = Astro.props;
---

<MainLayout>
  <section>
    <ul>
      {
        props.resources.map((resource) => (
          <li>
            <article>
              <h3>{resource.title}</h3>
              <time datetime={resource.lastUpdated}>
                Last updated: [[todo]]
              </time>
              <p>{resource.description}</p>
              <a href={resource.resourceUrl} rel="noopener" target="_blank">
                Go to resource
              </a>
            </article>
          </li>
        ))
      }
    </ul>
  </section>
  <aside>
    {
      props.applicableCategories?.length > 0 && (
        <nav>
          <h2>Category</h2>
          <ul>
            {props.applicableCategories.map((category) => (
              <li>
                <a href={`/${category.slug}/${params.population}`}>
                  {category.title}
                </a>
              </li>
            ))}
          </ul>
        </nav>
      )
    }
  </aside>
</MainLayout>
