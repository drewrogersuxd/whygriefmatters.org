---
import startCase from "lodash/startCase";
import pluralize from "pluralize";

import {
  getCategoriesForPopulation,
  getInternetResources,
  getPopulation,
  getPopulationSlugs,
} from "@common/client";
import { filterTypesFromResources } from "@common/resourceType";

import MainLayout from "@layouts/MainLayout.astro";
import ResourcePageLayout from "@layouts/ResourcePageLayout.astro";
import TwoColLayout from "@layouts/TwoColLayout.astro";

import AsideNav from "@ui/AsideNav/AsideNav.astro";
import Resource from "@ui/Resource.astro";
import NavLink from "@ui/primitives/NavLink.astro";

export async function getStaticPaths() {
  const slugs = await getPopulationSlugs();

  return slugs.map((population) => ({ params: { population } }));
}

const params = Astro.params;

const population = await getPopulation(params.population);
const resources = await getInternetResources({
  populationSlug: params.population,
});

const categories = await getCategoriesForPopulation(population.slug);
const filteredTypes = filterTypesFromResources(resources);
---

<MainLayout>
  <ResourcePageLayout population={population}>
    <TwoColLayout>
      <ul>
        {
          resources?.map((resource) => (
            <li>
              <Resource resource={resource} />
            </li>
          ))
        }
      </ul>
      <aside slot="aside">
        {
          filteredTypes.length > 0 && (
            <AsideNav title={`Filter by type...`}>
              {filteredTypes.map((type) => (
                <NavLink
                  href={`/${type}/${population.slug}`}
                  navContext="secondary"
                >
                  {pluralize(startCase(type))}
                </NavLink>
              ))}
            </AsideNav>
          )
        }
        {
          categories.length > 0 && (
            <AsideNav title={`Resources for ${population.name} by category...`}>
              {categories.map((category) => (
                <NavLink
                  href={`/${category.slug}/${population.slug}`}
                  navContext="secondary"
                >
                  {category.title}
                </NavLink>
              ))}
            </AsideNav>
          )
        }
      </aside>
    </TwoColLayout>
  </ResourcePageLayout>
</MainLayout>
