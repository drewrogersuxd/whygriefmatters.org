---
import { INTERNET_RESOURCE_TYPES } from "@model/common";

import { buildCategoryTree } from "@common/category";
import {
  getCategories,
  getInternetResources,
  getPopulation,
  getPopulationSlugs,
} from "@common/client";

import MainLayout from "@layouts/MainLayout.astro";
import ResourcePageLayout from "@layouts/ResourcePageLayout.astro";
import TwoColLayout from "@layouts/TwoColLayout.astro";
import AsideNav from "@ui/AsideNav/AsideNav.astro";
import Resource from "@ui/Resource.astro";
import RecursiveCategoryTree from "@ui/MainNav/RecursiveCategoryTree.astro";

export async function getStaticPaths() {
  const slugs = await getPopulationSlugs();

  return slugs.map((population) => ({ params: { population } }));
}

const params = Astro.params;

const population = await getPopulation(params.population);
const resources = await getInternetResources({
  populationSlug: params.population,
});

const categories = await getCategories();
const categoryTree = buildCategoryTree(categories);
---

<MainLayout>
  <ResourcePageLayout population={population}>
    <TwoColLayout>
      <ul>
        {
          resources?.map((resource) => (
            <li>
              <Resource resource={resource} />
            </li>
          ))
        }
      </ul>
      <aside slot="aside">
        <AsideNav title={`Resources for ${population.name} by type...`}>
          {
            INTERNET_RESOURCE_TYPES.map((type) => (
              <a class="block" href={`/${type}/${population.slug}`}>
                {type}
              </a>
            ))
          }
        </AsideNav>
        <AsideNav title={`Resources for ${population.name} by category...`}>
          <RecursiveCategoryTree
            navLinkVariantProps={{ navContext: "secondary" }}
            categories={categoryTree}
            getPath={(categorySlug) => `/${categorySlug}/${population.slug}`}
          />
        </AsideNav>
      </aside>
    </TwoColLayout>
  </ResourcePageLayout>
</MainLayout>
