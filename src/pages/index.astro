---
import { getHomePage, getImageUrl } from "@common/client";
import type { ResourcePageLink } from "@model/common";
import MainLayout from "@layouts/MainLayout.astro";
import RichTextContentBlock from "@ui/richTextContentBlock.astro";
import FeaturePanel from "@ui/FeaturePanel.astro";
import Hero from "@ui/Hero.astro";
import { cvaSchemaStandardVariants } from "@common/cva";

const homePage = await getHomePage();

const heroImg = {
  url: getImageUrl(homePage.heroImage.image).url(),
  alt: homePage.heroImage.altText,
};

function getRoute(pageLink: ResourcePageLink): string {
  const slugParts = [pageLink.type, pageLink.category, pageLink.population]
    .filter((part) => Boolean(part))
    .join("/");

  return `/${slugParts}`;
}

const coreValuesBgColors = [
  "bg-sky-700",
  "bg-sky-600",
  "bg-sky-500",
  "bg-sky-400",
  "bg-sky-300",
];
---

<MainLayout>
  <Hero imageUrl={heroImg.url}>
    <div class="text-white p-8">
      <h1 class="text-2xl">{homePage?.org.name}</h1>
      <span>{homePage?.org.slogan}</span>
    </div>
  </Hero>
  <section>
    <div class="bg-sky-800 p-2">
      <h2
        class="text-3xl text-center font-serif lowercase ellipsis text-white font-light"
      >
        Our <span class="font-semibold">Mission</span>
      </h2>
    </div>
    <div class="max-w-prose my-12 m-auto prose font-serif">
      <RichTextContentBlock portableText={homePage?.org.mission} />
    </div>
  </section>

  <div class="bg-blue-800/90 p-2">
    <h2
      class="text-3xl text-center font-serif lowercase ellipsis text-white font-light"
    >
      Our <span class="font-semibold">Values</span>
    </h2>
  </div>

  <div class="flex">
    {
      homePage.org.coreValues.map((coreValue, i) => (
        <div
          class:list={[
            "flex",
            "flex-1",
            "text-slate-50",
            "py-8",
            "px-8",
            coreValuesBgColors[i],
          ]}
        >
          <div>
            <h3 class="font-bold text-xl mb-3">{coreValue.title}</h3>
            <p class="font-light">{coreValue.description}</p>
          </div>
        </div>
      ))
    }
  </div>

  {
    homePage?.featurePanels.map((featuredContent, i) => (
      <FeaturePanel
        featuredContent={featuredContent}
        variant={
          cvaSchemaStandardVariants[i % cvaSchemaStandardVariants.length]
        }
      />
    ))
  }
</MainLayout>
