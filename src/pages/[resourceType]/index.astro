---
import capitalize from "lodash/capitalize";
import pluralize from "pluralize";

import { INTERNET_RESOURCE_TYPES } from "@model/common";

import {
  getCategoriesForResourceType,
  getInternetResources,
} from "@common/client";
import { getFilteredPopulationsFromResources } from "@common/population";

import ResourcePageLayout from "@layouts/ResourcePageLayout.astro";
import MainLayout from "@layouts/MainLayout.astro";
import TwoColLayout from "@layouts/TwoColLayout.astro";
import Resource from "@ui/Resource.astro";
import AsideNav from "@ui/AsideNav/AsideNav.astro";
import NavLink from "@ui/primitives/NavLink.astro";

export function getStaticPaths() {
  return [
    ...INTERNET_RESOURCE_TYPES.map((resourceType) => ({
      params: { resourceType },
    })),
  ];
}

const { resourceType } = Astro.params;

const resources = await getInternetResources({ resourceType });

const filteredPopulations =
  await getFilteredPopulationsFromResources(resources);

const categories = await getCategoriesForResourceType(resourceType);

const resourceTypeLabel = capitalize(pluralize(resourceType));
---

<MainLayout>
  <ResourcePageLayout resourceType={resourceType}>
    <TwoColLayout>
      <ul>
        {
          resources?.map((resource) => (
            <li>
              <Resource resource={resource} />
            </li>
          ))
        }
      </ul>
      <aside slot="aside">
        {
          filteredPopulations.length > 0 && (
            <AsideNav title={`${resourceTypeLabel} for...`}>
              {filteredPopulations.map((population) => (
                <NavLink
                  href={`/${resourceType}/${population.slug}`}
                  navContext="secondary"
                >
                  {population.name}
                </NavLink>
              ))}
            </AsideNav>
          )
        }
        {
          categories.length > 0 && (
            <AsideNav title={`${resourceTypeLabel} by category...`}>
              {categories.map((category) => (
                <NavLink
                  href={`/${resourceType}/${category.slug}`}
                  navContext="secondary"
                >
                  {category.title}
                </NavLink>
              ))}
            </AsideNav>
          )
        }
      </aside>
    </TwoColLayout>
  </ResourcePageLayout>
</MainLayout>
