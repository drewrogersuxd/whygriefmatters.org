---
import capitalize from "lodash/capitalize";
import pluralize from "pluralize";

import { INTERNET_RESOURCE_TYPES } from "@model/common";

import {
  getCategories,
  getInternetResources,
  getPopulations,
} from "@common/client";
import { buildCategoryTree } from "@common/category";

import ResourcePageLayout from "@layouts/ResourcePageLayout.astro";
import MainLayout from "@layouts/MainLayout.astro";
import TwoColLayout from "@layouts/TwoColLayout.astro";
import Resource from "@ui/Resource.astro";
import AsideNav from "@ui/AsideNav/AsideNav.astro";
import RecursiveCategoryTree from "@ui/MainNav/RecursiveCategoryTree.astro";

export function getStaticPaths() {
  return [
    ...INTERNET_RESOURCE_TYPES.map((resourceType) => ({
      params: { resourceType },
    })),
  ];
}

const { resourceType } = Astro.params;

const populations = await getPopulations();
const resources = await getInternetResources({ resourceType });
const categories = await getCategories();

const categoryTree = buildCategoryTree(categories);
---

<MainLayout>
  <ResourcePageLayout resourceType={resourceType}>
    <TwoColLayout>
      <ul>
        {
          resources?.map((resource) => (
            <li>
              <Resource resource={resource} />
            </li>
          ))
        }
      </ul>
      <aside slot="aside">
        <AsideNav title={`${capitalize(pluralize(resourceType))} for...`}>
          {
            populations.map((pop) => (
              <a
                class="block py-1 hover:underline"
                href={`/${resourceType}/${pop.slug}`}
              >
                {pop.name}
              </a>
            ))
          }
        </AsideNav>
        <AsideNav title={`${capitalize(pluralize(resourceType))} about...`}>
          <RecursiveCategoryTree
            categories={categoryTree}
            getPath={(slug) => `/${resourceType}/${slug}`}
          />
        </AsideNav>
      </aside>
    </TwoColLayout>
  </ResourcePageLayout>
</MainLayout>
