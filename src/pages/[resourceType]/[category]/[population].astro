---
import {
  type InternetResourcePageListing,
  internetResourceTypes,
} from "@model/internetResource";

import { getPopulations, getCategoryPagesData } from "@common/client";

import MainLayout from "@layouts/MainLayout.astro";

interface Props {
  resources: Array<InternetResourcePageListing>;
}

export async function getStaticPaths() {
  const categoryPagesData = await getCategoryPagesData();
  const populations = await getPopulations();

  return internetResourceTypes.flatMap((resourceType) =>
    populations.flatMap((population) =>
      categoryPagesData
        .filter(
          (data) =>
            data.resources &&
            data.resources.some(
              (r) =>
                r.type === resourceType &&
                r.populations?.includes(population.slug),
            ),
        )
        .map((data) => ({
          params: {
            category: data.slug,
            resourceType,
            population: population.slug,
          },
          props: {
            resources: data.resources.filter(
              (r) =>
                r.type === resourceType &&
                r.populations?.includes(population.slug),
            ),
          },
        })),
    ),
  );
}

const props = Astro.props;
---

<MainLayout>
  <section>
    <ul>
      {
        props.resources.map((resource) => (
          <li>
            <article>
              <h3>{resource.title}</h3>
              <time datetime={resource.lastUpdated}>
                Last updated: [[todo]]
              </time>
              <p>{resource.description}</p>
              <a href={resource.resourceUrl} rel="noopener" target="_blank">
                Go to resource
              </a>
            </article>
          </li>
        ))
      }
    </ul>
  </section>
</MainLayout>
