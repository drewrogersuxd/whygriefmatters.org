---
import { capitalize } from "lodash";
import pluralize from "pluralize";

import {
  getCategory,
  getCategorySlugs,
  getInternetResources,
  getPopulations,
} from "@common/client";
import { INTERNET_RESOURCE_TYPES } from "@model/common";

import MainLayout from "@layouts/MainLayout.astro";
import ResourcePageLayout from "@layouts/ResourcePageLayout.astro";
import TwoColLayout from "@layouts/TwoColLayout.astro";
import AsideNav from "@ui/AsideNav/AsideNav.astro";
import Resource from "@ui/Resource.astro";

export async function getStaticPaths() {
  const categorySlugs = await getCategorySlugs();

  return [
    ...INTERNET_RESOURCE_TYPES.flatMap((resourceType) =>
      categorySlugs.map((category) => ({
        params: { resourceType, category },
      })),
    ),
  ];
}

const params = Astro.params;

const populations = await getPopulations();
const category = await getCategory(params.category);
const resources = await getInternetResources({
  resourceType: params.resourceType,
  categorySlug: params.category,
});
---

<MainLayout>
  <ResourcePageLayout resourceType={params.resourceType} category={category}>
    <TwoColLayout>
      <ul>
        {
          resources?.map((resource) => (
            <li>
              <Resource resource={resource} />
            </li>
          ))
        }
      </ul>
      <aside slot="aside">
        <AsideNav
          title={`${capitalize(pluralize(params.resourceType))} about ${
            category.title
          } for...`}
        >
          {
            populations.map((population) => (
              <a
                class="block py-1 hover:underline"
                href={`/${params.resourceType}/${population.slug}`}
              >
                {population.name}
              </a>
            ))
          }
        </AsideNav>
      </aside>
    </TwoColLayout>
  </ResourcePageLayout>
</MainLayout>
