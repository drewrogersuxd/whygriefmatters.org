---
import {
  type InternetResourcePageListing,
  internetResourceTypes,
} from "@model/internetResource";
import type { Population } from "@model/population";

import { getPopulations, getCategoryPagesData } from "@common/client";

import MainLayout from "@layouts/MainLayout.astro";
import ResourcePageListing from "@ui/ResourcePageListing.astro";

interface Props {
  resources: Array<InternetResourcePageListing>;
  applicablePopulations: Array<Population>;
}

export async function getStaticPaths() {
  const categoryPagesData = await getCategoryPagesData();
  const populations = await getPopulations();

  return internetResourceTypes.flatMap((resourceType) =>
    categoryPagesData
      .filter(
        (categoryPageData) =>
          categoryPageData.resources &&
          categoryPageData.resources.some(
            (resource) => resource.type === resourceType,
          ),
      )
      .map((catPage) => {
        const filteredPopulations = populations.filter((p) =>
          catPage.resources.some((r) => r.populations?.includes(p.slug)),
        );

        return {
          params: { category: catPage.slug, resourceType },
          props: {
            resources: catPage.resources,
            applicablePopulations: filteredPopulations,
          },
        };
      }),
  );
}

const params = Astro.params;
const props = Astro.props;
---

<MainLayout>
  <section>
    <ul>
      {
        props.resources.map((resource) => (
          <li class="mb-6">
            <ResourcePageListing resource={resource} />
          </li>
        ))
      }
    </ul>
  </section>
  <aside>
    {
      props.applicablePopulations?.length > 0 && (
        <nav>
          <h2>Population</h2>
          <ul>
            {props.applicablePopulations.map((population) => (
              <li>
                <a
                  href={`/${params.resourceType}/${params.category}/${population.slug}`}
                >
                  {population.name}
                </a>
              </li>
            ))}
          </ul>
        </nav>
      )
    }
  </aside>
</MainLayout>
