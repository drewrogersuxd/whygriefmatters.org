---
import { getCategories, getFeaturedTopics } from "@common/client";
import type { Category } from "@model/category";
import RecursiveCategoryTree from "./RecursiveCategoryTree.astro";
import SiteWideNavGroup from "./SiteWideNavGroup.astro";
import type { TreeItem } from "./MainNav/MainNav.astro";

const featuredTopics = await getFeaturedTopics();

const categories = await getCategories();
const masterCategoryTree: TreeItem[] = buildCategoryTree(categories);

const typesOfLoss = masterCategoryTree.find(
  (rootCategory) => rootCategory.slug === "types-of-loss",
);

const supportingTheBereaved = masterCategoryTree.find(
  (rootCategory) => rootCategory.slug === "supporting-the-bereaved",
);

function buildCategoryTree(categories: Category[]): TreeItem[] {
  const categoryMap: Record<string, any> = {};

  // Create a mapping of categories using slug as key
  categories.forEach((c) => {
    categoryMap[c.slug] = { ...c, children: [] };
  });

  // Populate the children arrays
  categories.forEach((category) => {
    if (category.parent) {
      // If the category has a parent, add it as a child to the parent
      const parentSlug = category.parent.slug;
      categoryMap[parentSlug].children.push(categoryMap[category.slug]);
    }
  });

  // Find top-level categories
  const rootCategories: TreeItem[] = Object.values(categoryMap).filter(
    (category) => !category.parent,
  );

  return rootCategories;
}
---

<nav
  class="z-50 relative w-screen flex justify-center items-center bg-blue-800 text-white"
>
  <!-- Featured Topics -->
  <SiteWideNavGroup title="Featured Topics">
    {featuredTopics.map((topic) => <a href={topic.slug}>{topic.title}</a>)}
  </SiteWideNavGroup>

  <!-- Types of Loss -->
  <SiteWideNavGroup title="Types of Loss">
    {/* We should determine col count based on children + 1 */}
    <div class="grid grid-cols-3">
      {
        typesOfLoss?.children.map((c) => (
          <RecursiveCategoryTree categories={[c]} />
        ))
      }
    </div>
  </SiteWideNavGroup>

  <!-- Supporting the Bereaved -->
  <SiteWideNavGroup title="Supporting the Bereaved">
    <div class="grid grid-cols-2">
      {
        supportingTheBereaved?.children
          .filter((c) => c.children.length > 0)
          .map((c, i) => (
            <div class="mb-3">
              <RecursiveCategoryTree categories={[c]} />
              {i + 1 === c.children.length ? (
                <ul class="border-t-2 mt-3 pt-3">
                  <h3 class="text-xl font-serif font-semibold">
                    Specific Support Topics
                  </h3>
                  <p class="pb-2 italic font-serif text-slate-400">
                    A selection of more focussed topics offering help with
                    supporting specific groups
                  </p>
                  {supportingTheBereaved?.children
                    .filter((c) => c.children.length === 0)
                    .map((c) => (
                      <li>
                        <a href={c.slug} class="hover:underline">
                          {c.title}
                        </a>
                      </li>
                    ))}
                </ul>
              ) : null}
            </div>
          ))
      }
      <div></div>
    </div>
  </SiteWideNavGroup>

  <!-- {
    isSupportingTheBereavedProcessed && (
      <div class="group">
        <span class="px-5 py-3 group-hover:underline">
          {supportingTheBereaved.title}
        </span>
        <div class="hidden group-hover:flex flex-col absolute left-0 p-5 w-full bg-blue-800">
          <div class="pb-5">
            <h3 class="text-2xl">{supportingTheBereaved.title}</h3>
          </div>
          <div class="grid grid-cols-2">
            <div class="last:col-start-2">
              <RecursiveCategoryTree
                categories={[supportingTheBereavedSection1[0]]}
              />
            </div>
            {
              <div>
                <div class="mb-3">
                  <RecursiveCategoryTree
                    categories={[supportingTheBereavedSection1[1]]}
                  />
                </div>
                <div class="border-t-2 pt-3">
                  <RecursiveCategoryTree
                    categories={supportingTheBereavedSection2}
                    headingLevel={2}
                  />
                </div>
              </div>
            }
          </div>
        </div>
      </div>
    )
  } -->

  <!-- <div class="group">
    <span class="px-5 py-3 group-hover:underline">Browse Categories</span>
    <div
      class="hidden group-hover:flex flex-col absolute left-0 p-5 w-full bg-blue-800"
    >
      <div class="pb-5">
        <h3 class="text-2xl">Categories</h3>
      </div>
      <div class="grid grid-cols-3">
        <RecursiveCategoryTree
          categories={masterCategoryTree?.filter(
            (item) => item.children.length > 0,
          )}
        />
        <RecursiveCategoryTree
          categories={masterCategoryTree?.filter(
            (item) => item.children.length === 0,
          )}
        />
      </div>
    </div>
  </div> -->
</nav>
