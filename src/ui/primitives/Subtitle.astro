---
import type { HTMLAttributes } from "astro/types";
import {
  wgmDesignSystem as ds,
  type TypographyColorScheme,
  type TypographyColorSchemeVariant,
  type TypographySize,
} from "@common/design-system";

// Define valid HTML tags we want to support
type ValidTags =
  | "p"
  | "span"
  | "div"
  | "h1"
  | "h2"
  | "h3"
  | "h4"
  | "h5"
  | "h6"
  | "time";

interface Props extends HTMLAttributes<"span"> {
  as?: ValidTags;
  children: any;
  colorScheme?: TypographyColorScheme;
  colorSchemeVariant?: TypographyColorSchemeVariant;
  size?: TypographySize;
  hoverable?: boolean;
}

const {
  as: Tag = "span",
  size = "sm",
  hoverable = false,
  class: className,
  ...props
} = Astro.props;
---

<Tag
  class:list={[
    "block",
    "font-serif italic",
    ds.typography.size[size as TypographySize],
    ds.typography.color.neutral.default,
    className,
  ]}
  {...props}
>
  <slot />
</Tag>
