---
import type { HTMLAttributes } from "astro/types";
import { cva, type VariantProps } from "class-variance-authority";

export type NavLinkVariantProps = VariantProps<typeof linkCva>;

interface Props extends HTMLAttributes<"a">, NavLinkVariantProps {
  children: any;
}

const { navContext = "main", linkLevel = "primary", ...attrs } = Astro.props;

const linkCva = cva(["font-serif", "decoration-dotted", "hover:underline"], {
  variants: {
    navContext: {
      main: ["font-serif", "inline-block"],
      secondary: ["font-sans", "block"],
    },
    linkLevel: {
      primary: [],
      secondary: [],
      tertiary: ["text-base"],
      quaternary: [],
    },
  },
  compoundVariants: [
    {
      navContext: "main",
      linkLevel: "primary",
      class: ["text-lg", "font-serif", "font-semibold"],
    },
    {
      navContext: "main",
      linkLevel: "secondary",
      class: ["text-base", "font-serif", "font-medium"],
    },
    {
      navContext: "main",
      linkLevel: "primary",
      class: ["text-lg", "font-serif", "font-semibold"],
    },
  ],
});
---

<a class={linkCva({ navContext, linkLevel })} {...attrs}>
  <slot />
</a>
