---
import type { CategoryTreeItem } from "@common/category";
import NavLink, {
  type NavLinkVariantProps,
} from "@ui/primitives/NavLink.astro";

interface Props {
  categories: CategoryTreeItem[];
  navLinkVariantProps?: NavLinkVariantProps;
  getPath?(slug: string): string;
}

const {
  categories,
  navLinkVariantProps = { navContext: "main", linkLevel: "primary" },
  getPath,
} = Astro.props;

type LinkLevel = Extract<
  NavLinkVariantProps["linkLevel"],
  string | null | undefined
>;

const linkLevels: Array<LinkLevel> = [
  "primary",
  "secondary",
  "tertiary",
  "quaternary",
];

const currentLinkLevelIndex = linkLevels.findIndex(
  (x) => x === navLinkVariantProps.linkLevel,
);

const nextIndex = Math.min(currentLinkLevelIndex + 1, linkLevels.length - 1);
const nextVariant = linkLevels[nextIndex];
---

<ul>
  {
    categories.map((c) => (
      <li>
        <NavLink
          href={typeof getPath === "function" ? getPath(c.slug) : `/${c.slug}`}
          navContext={navLinkVariantProps.navContext}
          linkLevel={navLinkVariantProps.linkLevel}
        >
          {c.title}
        </NavLink>
        {c.children.length > 0 && (
          <Astro.self
            categories={c.children}
            navLinkVariantProps={{
              navContext: navLinkVariantProps.navContext,
              linkLevel: nextVariant,
            }}
            getPath={getPath}
          />
        )}
      </li>
    ))
  }
</ul>
