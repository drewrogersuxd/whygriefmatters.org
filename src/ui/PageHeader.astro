---
import { getFallbackImageCollection, getImageUrl } from "@common/client";
import {
  wgmDesignSystem as ds,
  type DsColorVariant,
} from "@common/design-system";
import type { PageTitle } from "@common/page";
import type { SanityImage } from "@model/image";

interface Props {
  pageTitle: PageTitle;
  image?: SanityImage;
  bgVariant?: DsColorVariant;
}

// TODO - fetch a random image for those that are missing
const fallbackImages = await getFallbackImageCollection();

const props = Astro.props;

const image =
  props.image ??
  fallbackImages[Math.floor(Math.random() * fallbackImages.length)];

const smImgUrl = image
  ? `url(${getImageUrl(image.image).width(640).height(320).url()})`
  : null;
const mdImgUrl = image
  ? `url(${getImageUrl(image.image).width(1024).height(512).url()})`
  : null;
const lgImgUrl = image
  ? `url(${getImageUrl(image.image).width(1280).height(640).url()})`
  : null;
const xlImgUrl = image
  ? `url(${getImageUrl(image.image).width(2560).height(850).url()})`
  : null;
const bgPosX = `${(image.image.hotspot?.x ?? 0) * 100}%`;
const bgPosY = `${(image.image.hotspot?.y ?? 0) * 100}%`;

// const bgClass = ds.background.color?.[props.bgVariant[0]]?.[props.bgVariant[1]];

const bgClass = props.bgVariant
  ? ds.background.color?.[props.bgVariant[0]]?.[props.bgVariant[1]]
  : undefined;
---

<header class:list={[bgClass]}>
  <div class:list={["sm:mx-auto sm:p-3 sm:relative", "xl:container xl:p-6"]}>
    <div
      class:list={["sm:bg-white sm:p-2 sm:shadow-lg", "md:mx-6", "lg:mt-12"]}
    >
      <div class:list={["page-header-bg", "h-40 sm:h-80 xl:h-96"]}></div>
    </div>
    <h1
      class:list={[
        "overflow-hidden",
        "-mt-9",
        "sm:mx-12 sm:absolute sm:bottom-0 sm:left-0",
        "md:mx-24",
        "lg:top-0 lg:mt-8",
        "xl:max-w-2xl xl:mx-auto",
      ]}
    >
      {
        props.pageTitle.supTitle && (
          <span class="block">
            <span
              class:list={[
                "font-serif italic",
                "box-decoration-clone px-3",
                ds.background.color?.primary.default,
                ds.typography.color?.primary.contrast,
              ]}
            >
              {props.pageTitle.supTitle}
            </span>
          </span>
        )
      }

      <span class="block">
        <span
          class:list={[
            "text-3xl font-serif font-medium lg:text-4xl",
            "box-decoration-clone px-3",
            ds.background.color?.primary.default,
            ds.typography.color?.primary.contrast,
          ]}
        >
          {props.pageTitle.title}
        </span>
      </span>

      {
        props.pageTitle.subTitle && (
          <span class="block">
            <span>{props.pageTitle.subTitle}</span>
          </span>
        )
      }
    </h1>
  </div>
</header>

<style define:vars={{ smImgUrl, mdImgUrl, lgImgUrl, xlImgUrl, bgPosX, bgPosY }}>
  .page-header-bg {
    background-size: cover;
    background-position: center;
    background-position-x: var(--bgPosX);
    background-position-y: var(--bgPosY);
  }

  @media (max-width: 640px) {
    .page-header-bg {
      background-image: var(--smImgUrl);
    }
  }
  @media (min-width: 641px) and (max-width: 1024px) {
    .page-header-bg {
      background-image: var(--mdImgUrl);
    }
  }
  @media (min-width: 1025px) and (max-width: 1280px) {
    .page-header-bg {
      background-image: var(--lgImgUrl);
    }
  }
  @media (min-width: 1281px) {
    .page-header-bg {
      background-image: var(--xlImgUrl);
    }
  }
</style>
