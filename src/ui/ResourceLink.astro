---
import { cva, type VariantProps } from "class-variance-authority";
import type { HTMLAttributes } from "astro/types";

import type { InternetResourceType } from "@model/common";
import type { ResourceTypeVariantCvaSchema } from "@common/cva";

interface Props extends HTMLAttributes<"a">, VariantProps<typeof linkCva> {
  children?: any;
}

const { variant, ...attrs } = Astro.props;

const linkTextMap: Record<InternetResourceType | "default", string> = {
  app: "Visit app store",
  article: "Read the article",
  blog: "Go to blog",
  book: "View book",
  booklet: "Download booklet",
  brochure: "Visit this resource",
  course: "Visit this resource",
  forum: "Visit this resource",
  memorial: "Visit this resource",
  peerSupport: "Visit this resource",
  podcast: "Visit this resource",
  podcastEpisode: "Visit this resource",
  story: "Read this story",
  supportGroup: "Go to support group",
  therapyResource: "Visit this resource",
  video: "Watch video",
  webinar: "Watch webinar",
  website: "Visit website",
  default: "Visit this resource",
};

const linkCvaSchema: ResourceTypeVariantCvaSchema = {
  variant: {
    article: ["border-fuchsia-500/50", "hover:border-fuchsia-500"],
    video: ["border-teal-500/50", "hover:border-teal-500"],
    app: ["border-teal-500/50", "hover:border-teal-500"],
    blog: ["border-teal-500/50", "hover:border-teal-500"],
    book: ["border-teal-500/50", "hover:border-teal-500"],
    booklet: ["border-teal-500/50", "hover:border-teal-500"],
    brochure: ["border-teal-500/50", "hover:border-teal-500"],
    course: ["border-teal-500/50", "hover:border-teal-500"],
    forum: ["border-teal-500/50", "hover:border-teal-500"],
    memorial: ["border-teal-500/50", "hover:border-teal-500"],
    peerSupport: ["border-teal-500/50", "hover:border-teal-500"],
    podcast: ["border-teal-500/50", "hover:border-teal-500"],
    podcastEpisode: ["border-teal-500/50", "hover:border-teal-500"],
    story: ["border-teal-500/50", "hover:border-teal-500"],
    supportGroup: ["border-teal-500/50", "hover:border-teal-500"],
    therapyResource: ["border-teal-500/50", "hover:border-teal-500"],
    webinar: ["border-teal-500/50", "hover:border-teal-500"],
    website: ["border-teal-500/50", "hover:border-teal-500"],
    default: ["border-sky-500/50", "hover:border-sky-500"],
  },
};

const linkCva = cva(
  [
    "font-serif",
    "italic",
    "text-sm",
    "border-b-2",
    "text-black",
    "bg-slate-50",
    "py-1",
    "px-2",
  ],
  {
    variants: linkCvaSchema,
  },
);
---

<a class={linkCva({ variant })} rel="noopener" target="_blank" {...attrs}>
  <slot>
    {linkTextMap[variant ?? "default"]}
  </slot>
</a>
