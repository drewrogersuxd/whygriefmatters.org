---
import { cva, type VariantProps } from "class-variance-authority";

import { getImageUrl } from "@common/client";
import type { StandardVariantCvaSchema } from "@common/cva";
import type { FeaturedContent } from "@model/featuredContent";
import type { ResourcePageLink } from "@model/common";

import RichTextContentBlock from "./richTextContentBlock.astro";

interface Props extends VariantProps<typeof featurePanel> {
  featuredContent: FeaturedContent;
}

function getRoute(pageLink: ResourcePageLink): string {
  const slugParts = [pageLink.type, pageLink.category, pageLink.population]
    .filter((part) => Boolean(part))
    .join("/");

  return `/${slugParts}`;
}

const variantSchema: StandardVariantCvaSchema = {
  variant: {
    primary: ["bg-teal-50"],
    secondary: ["bg-violet-50"],
    tertiary: ["bg-yellow-50"],
    quaternary: [],
  },
};

const featurePanel = cva(["text-sky-900", "py-6"], {
  variants: variantSchema,
});

const { featuredContent, variant = "primary" } = Astro.props;
---

<section class={featurePanel({ variant })}>
  <div class="container mx-auto">
    <div>
      <h2
        class="text-4xl text-center font-serif lowercase after:content-['...']"
      >
        {featuredContent.title}
      </h2>
    </div>
    {
      featuredContent.description && (
        <div class="max-w-prose my-6 m-auto prose font-serif text-center">
          <RichTextContentBlock portableText={featuredContent.description} />
        </div>
      )
    }
    {
      featuredContent.content.map((content) => {
        switch (content.contentType) {
          case "richTextContentBlock":
            return (
              <div class="max-w-prose my-6 m-auto prose font-serif text-center">
                <RichTextContentBlock portableText={content.portableText} />
              </div>
            );

          case "resourceLinks":
            return (
              <div
                class:list={["flex", "flex-wrap", "justify-center", "gap-4"]}
              >
                {content.resources.map((link) => (
                  <a
                    class:list={[
                      "bg-white",
                      "p-2",
                      "border-b-4",
                      "border-b-blue-800/50",
                      "hover:border-b-blue-800",
                      "text-blue-800",
                      "font-serif",
                      "italic",
                    ]}
                    href={link.url}
                    target="_blank"
                    rel="noopener"
                  >
                    {link.title}
                  </a>
                ))}
              </div>
            );
          case "rowOfThree":
            return (
              <div class="flex gap-4 mt-8">
                {content.images.map((image) => (
                  <div class="flex-1">
                    <img
                      class="aspect-video"
                      src={getImageUrl(image.image).url()}
                      alt={image.altText}
                    />
                  </div>
                ))}
              </div>
            );
          case "resourcePageLinks":
            return (
              <div
                class:list={["flex", "flex-wrap", "justify-center", "gap-4"]}
              >
                {content.links.map((pageLink) => (
                  <a
                    class:list={[
                      "bg-white",
                      "p-2",
                      "border-b-4",
                      "border-b-blue-800/50",
                      "hover:border-b-blue-800",
                      "text-blue-800",
                      "font-serif",
                      "italic",
                    ]}
                    href={getRoute(pageLink)}
                  >
                    {pageLink.label}
                  </a>
                ))}
              </div>
            );
        }
      })
    }
    {
      featuredContent.featuredContentFooterLink && (
        <div class="mt-8">
          <a
            class:list={[
              "underline",
              "underline-offset-4",
              "decoration-4",
              "decoration-sky-800/30",
              "hover:decoration-sky-800",
              "text-2xl",
              "font-serif",
              "lowercase",
              "w-fit",
              "block",
              "mx-auto",
              "after:content-['...']",
            ]}
            href={getRoute(featuredContent.featuredContentFooterLink)}
          >
            {featuredContent.featuredContentFooterLink.label}
          </a>
        </div>
      )
    }
  </div>
</section>
