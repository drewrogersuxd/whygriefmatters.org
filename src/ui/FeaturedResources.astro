---
import type { CategoryPageFeaturedResource } from "@model/categoryPage";
import FeaturedResource from "./FeaturedResource.astro";
import LowerEmTitle from "./primitives/LowerEmTitle.astro";

interface Props {
  featuredResources: Array<CategoryPageFeaturedResource>;
}

const { featuredResources } = Astro.props;
---

<mobile-carousel>
  <section class="w-full overflow-hidden">
    <div
      class:list={[
        "flex",
        "overflow-x-auto snap-mandatory snap-x scroll-smooth",
      ]}
    >
      {
        featuredResources.map((resource, idx) => (
          <div
            class:list={["snap-start", "shrink-0 w-full"]}
            id={`slide-${idx + 1}`}
          >
            <FeaturedResource featuredResource={resource} />
          </div>
        ))
      }
    </div>
    <div class="controls flex justify-center space-x-1">
      {
        featuredResources.map((_, idx) => (
          <a
            class:list={[
              "inline-block",
              "rounded-full",
              "dot",
              "bg-slate-300 active:bg-transparent focus:bg-transparent hover:bg-transparent",
              "border-2 border-slate-300",
            ]}
            href={`#slide-${idx + 1}`}
          >
            <span class="invisible">{idx + 1}</span>
          </a>
        ))
      }
    </div>
  </section>
</mobile-carousel>

<style>
  .dot {
    width: 0.85em;
    height: 0.85em;
  }
</style>

<script>
  class MobileCarousel extends HTMLElement {
    constructor() {
      super();
    }

    connectedCallback() {
      const controlsContainer = this.querySelector(".controls");

      controlsContainer?.addEventListener("click", (event) => {
        const attr: string | null = (event.target as Element).getAttribute(
          "href"
        );

        if (attr === null) return;

        const slide = this.querySelector(attr);

        if (slide) {
          event.preventDefault();
          slide.scrollIntoView({
            behavior: "smooth",
            block: "nearest",
          });
        }
      });
    }
  }

  customElements.define("mobile-carousel", MobileCarousel);
</script>
